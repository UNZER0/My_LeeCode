public class Main {
    public static void main(String[] args) {
        int[] num = {-2, 3, -4};
        Solution solution = new Solution();
        System.out.println(solution.maxProduct(num));
    }
}

class Solution {
    public int maxProduct(int[] nums) {
        if (nums == null || nums.length == 0) {
            return -1;
        }
        if (nums.length == 1) {
            return nums[0];
        }
        int[] maxDp = new int[nums.length + 1];
        int[] minDp = new int[nums.length + 1];
        //dp初值
        maxDp[0] = nums[0];
        minDp[0] = nums[0];
        int max = maxDp[0];
        for (int i = 1; i < nums.length; i++) {
            //维护最大值和最小值，在三者之间取最大或者最小值，因为最大值和最小者可能会互相转化
            maxDp[i] = Math.max(maxDp[i - 1] * nums[i], Math.max(nums[i], minDp[i - 1] * nums[i]));
            minDp[i] = Math.min(maxDp[i - 1] * nums[i], Math.min(nums[i], minDp[i - 1] * nums[i]));
            System.out.println(maxDp[i]);
            System.out.println(minDp[i]);
            if (maxDp[i] > max) {
                max = maxDp[i];
            }
        }
        return max;
    }
}
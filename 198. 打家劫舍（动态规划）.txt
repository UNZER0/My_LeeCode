public class Main2 {
    public static void main(String[] args) {
        int[] num = {2, 1, 1, 2};
        Solution solution = new Solution();
        System.out.println(solution.rob(num));
    }
}

class Solution {
    public int rob(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        //多出来一个，因为从1开始表示，0的话是为了方便后边状态转移
        int[] dp = new int[nums.length+1];
        dp[0]=0;
        dp[1]=nums[0];
        //dp[1]表示第一个元素的情况，也就是nums[0]的情况
        for (int i = 2; i <=nums.length ; i++) {
            //当前元素+上上一个dp和当一个dp的较大者
            dp[i]=Math.max(nums[i-1]+dp[i-2],dp[i-1]);
        }
        return dp[nums.length];
    }
}
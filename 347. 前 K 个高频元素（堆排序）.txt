public class Main {
    public static void main(String[] args) {
       int[] nums={1,1,1,2,2,3};
        Solution solution = new Solution();
        int[] topKFrequent = solution.topKFrequent(nums, 2);
        System.out.println(Arrays.toString(topKFrequent));
    }
}



class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        //特判
        if (nums==null||nums.length==0||k<=0){
            return new int[]{};
        }
        //统计频率
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            if (!map.containsKey(nums[i])){
                map.put(nums[i],1);
            }else {
                map.put(nums[i],map.get(nums[i])+1);
            }
        }

        System.out.println(map);

        //小顶堆排序
        PriorityQueue<Integer> priorityQueue = new PriorityQueue<>(new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return map.get(o1)-map.get(o2);
            }
        });
        for (Integer integer : map.keySet()) {
            if (priorityQueue.size()<k){
                priorityQueue.add(integer);
            }else if(map.get(priorityQueue.peek())<map.get(integer)){
                priorityQueue.remove();
                priorityQueue.add(integer);
            }
        }
        System.out.println(priorityQueue);
        //返回
        int[] num=new int[k];
        int i=0;
        for (Integer integer : priorityQueue) {
            num[i++]=integer;
        }
        return num;
    }
}
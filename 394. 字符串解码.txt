import java.util.Stack;

public class Main {
    public static void main(String[] args) {
        String str="abc3[cd]xyz";
        Solution solution = new Solution();
        System.out.println(solution.decodeString(str));
    }
}

class Solution {
    public String decodeString(String s) {
        if (s==null||s.length()==0){
            return "";
        }
        //处理s
        int num=0 ;
        StringBuilder str=new StringBuilder("");
        Stack<Integer> integers = new Stack<>();
        Stack<String> strings = new Stack<>();
        for (int i = 0; i < s.length(); i++) {
            char ch=s.charAt(i);
            //处理数字
            if (ch>='0'&&ch<='9'){
                num=num*10+ch-'0';
            }else if (ch=='['){
                //遇到左括号,将数字入数字栈，字符入字符栈
                integers.add(num);
                strings.add(str.toString());
                str=new StringBuilder("");
                num=0;
            }else if(ch==']'){
                //遇到右括号，开始用数字栈*当前字符，然后重新与字符栈顶字符拼接并重新入栈
                Integer pop = integers.pop();
                StringBuilder tmp=new StringBuilder();
                StringBuilder str_tmp = new StringBuilder(strings.pop());
                for (int j = 0; j < pop; j++) {
                    tmp.append(str);
                }
                str=str_tmp.append(tmp);
            }else {
                //处理字符
                str.append(ch);
            }
        }
        return str.toString();
    }
}
public class Main {
    public static void main(String[] args) {
        TreeNode t1 = new TreeNode(1);
        t1.left = new TreeNode(3);
        t1.right = new TreeNode(2);
        t1.left.left = new TreeNode(5);

        TreeNode t2 = new TreeNode(2);
        t2.left = new TreeNode(1);
        t2.right = new TreeNode(3);
        t2.left.right = new TreeNode(4);
        t2.right.right = new TreeNode(7);
        Solution solution = new Solution();
        solution.inorder(solution.mergeTrees(t1, t2));
    }
}

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode(int x) {
        val = x;
    }
}

class Solution {
    public TreeNode mergeTrees(TreeNode t1, TreeNode t2) {
        //特判
        if (t1 == null) {
            return t2;
        }
        if (t2 == null) {
            return t1;
        }
        //直接把t2合并到t1上
        t1.val = t1.val + t2.val;
        //构建左子树
        t1.left = mergeTrees(t1.left, t2.left);
        //构建右子树
        t1.right = mergeTrees(t1.right, t2.right);
        //返回新树
        return t1;
    }

    public void inorder(TreeNode t) {
        if (t == null) {
            return;
        }
        inorder(t.left);
        System.out.println(t.val);
        inorder(t.right);
    }
}
